function contains(t,i){for(var s in t)if(t[s].albumname==i)return s;return-1}!function(t,i){"use strict";var s={};i.module("spotify",[]).value("settings",s).provider("Spotify",function(){s.clientId=null,s.redirectUri=null,s.scope=null,s.accessToken=null,this.setClientId=function(t){return s.clientId=t,s.clientId},this.getClientId=function(){return s.clientId},this.setRedirectUri=function(t){return s.redirectUri=t,s.redirectUri},this.getRedirectUri=function(){return s.redirectUri},this.setScope=function(t){return s.scope=t,s.scope};var e={};e.toQueryString=function(t){var i=[];for(var s in t)t.hasOwnProperty(s)&&i.push(encodeURIComponent(s)+"="+encodeURIComponent(t[s]));return i.join("&")},s.version="v1",s.apiBase="https://api.spotify.com/"+s.version,this.$get=["$q","$http","$window",function(n,r,o){function a(){this.clientId=s.clientId,this.redirectUri=s.redirectUri,this.apiBase=s.apiBase,this.scope=s.scope,this.accessToken=null,this.toQueryString=e.toQueryString}return a.prototype.api=function(t,i,s,e,o){var a=n.defer();return r({url:this.apiBase+t,method:i?i:"GET",params:s,data:e,headers:o}).success(function(t){a.resolve(t)}).error(function(t){a.reject(t)}),a.promise},a.prototype.search=function(t,i,s){return s=s||{},s.q=t,s.type=i,this.api("/search","GET",s)},a.prototype.getAlbum=function(t){return t=-1===t.indexOf("spotify:")?t:t.split(":")[2],this.api("/albums/"+t)},a.prototype.getAlbums=function(t){return t=i.isString(t)?t.split(","):t,i.forEach(t,function(i,s){t[s]=i.indexOf("spotify:")>-1?i.split(":")[2]:i}),this.api("/albums","GET",{ids:t?t.toString():""})},a.prototype.getAlbumTracks=function(t,i){return t=-1===t.indexOf("spotify:")?t:t.split(":")[2],this.api("/albums/"+t+"/tracks","GET",i)},a.prototype.getArtist=function(t){return t=-1===t.indexOf("spotify:")?t:t.split(":")[2],this.api("/artists/"+t)},a.prototype.getArtists=function(t){return t=i.isString(t)?t.split(","):t,i.forEach(t,function(i,s){t[s]=i.indexOf("spotify:")>-1?i.split(":")[2]:i}),this.api("/artists/","GET",{ids:t?t.toString():""})},a.prototype.getArtistAlbums=function(t,i){return t=-1===t.indexOf("spotify:")?t:t.split(":")[2],this.api("/artists/"+t+"/albums","GET",i)},a.prototype.getArtistTopTracks=function(t,i){return t=-1===t.indexOf("spotify:")?t:t.split(":")[2],this.api("/artists/"+t+"/top-tracks","GET",{country:i})},a.prototype.getRelatedArtists=function(t){return t=-1===t.indexOf("spotify:")?t:t.split(":")[2],this.api("/artists/"+t+"/related-artists")},a.prototype.getTrack=function(t){return t=-1===t.indexOf("spotify:")?t:t.split(":")[2],this.api("/tracks/"+t)},a.prototype.getTracks=function(t){return t=i.isString(t)?t.split(","):t,i.forEach(t,function(i,s){t[s]=i.indexOf("spotify:")>-1?i.split(":")[2]:i}),this.api("/tracks/","GET",{ids:t?t.toString():""})},a.prototype.getUserPlaylists=function(t,i){return this.api("/users/"+t+"/playlists","GET",i,null,{Authorization:"Bearer "+this.authToken})},a.prototype.getPlaylist=function(t,i,s){return this.api("/users/"+t+"/playlists/"+i,"GET",s,null,{Authorization:"Bearer "+this.authToken})},a.prototype.getPlaylistTracks=function(t,i,s){return this.api("/users/"+t+"/playlists/"+i+"/tracks","GET",s,null,{Authorization:"Bearer "+this.authToken})},a.prototype.createPlaylist=function(t,i){return this.api("/users/"+t+"/playlists","POST",null,i,{Authorization:"Bearer "+this.authToken,"Content-Type":"application/json"})},a.prototype.addPlaylistTracks=function(t,s,e,n){return e=i.isArray(e)?e:e.split(","),i.forEach(e,function(t,i){e[i]=-1===t.indexOf("spotify:")?"spotify:track:"+t:t}),this.api("/users/"+t+"/playlists/"+s+"/tracks","POST",{uris:e.toString(),position:n?n.position:null},null,{Authorization:"Bearer "+this.authToken,"Content-Type":"application/json"})},a.prototype.removePlaylistTracks=function(t,s,e){e=i.isArray(e)?e:e.split(",");var n;return i.forEach(e,function(t,i){n=e[i],e[i]={uri:-1===n.indexOf("spotify:")?"spotify:track:"+n:n}}),this.api("/users/"+t+"/playlists/"+s+"/tracks","DELETE",null,{tracks:e},{Authorization:"Bearer "+this.authToken,"Content-Type":"application/json"})},a.prototype.replacePlaylistTracks=function(t,s,e){e=i.isArray(e)?e:e.split(",");var n;return i.forEach(e,function(t,i){n=e[i],e[i]=-1===n.indexOf("spotify:")?"spotify:track:"+n:n}),this.api("/users/"+t+"/playlists/"+s+"/tracks","PUT",{uris:e.toString()},null,{Authorization:"Bearer "+this.authToken,"Content-Type":"application/json"})},a.prototype.updatePlaylistDetails=function(t,i,s){return this.api("/users/"+t+"/playlists/"+i,"PUT",null,s,{Authorization:"Bearer "+this.authToken,"Content-Type":"application/json"})},a.prototype.getUser=function(t){return this.api("/users/"+t)},a.prototype.getCurrentUser=function(){return this.api("/me","GET",null,null,{Authorization:"Bearer "+this.authToken})},a.prototype.getSavedUserTracks=function(t){return this.api("/me/tracks","GET",t,null,{Authorization:"Bearer "+this.authToken})},a.prototype.userTracksContains=function(t){return t=i.isString(t)?t.split(","):t,i.forEach(t,function(i,s){t[s]=i.indexOf("spotify:")>-1?i.split(":")[2]:i}),this.api("/me/tracks/contains","GET",{ids:t.toString()},null,{Authorization:"Bearer "+this.authToken})},a.prototype.saveUserTracks=function(t){return t=i.isString(t)?t.split(","):t,i.forEach(t,function(i,s){t[s]=i.indexOf("spotify:")>-1?i.split(":")[2]:i}),this.api("/me/tracks","PUT",{ids:t.toString()},null,{Authorization:"Bearer "+this.authToken})},a.prototype.removeUserTracks=function(t){return this.api("/me/tracks","DELETE",{ids:t.toString()},null,{Authorization:"Bearer "+this.authToken,"Content-Type":"application/json"})},a.prototype.setAuthToken=function(t){return this.authToken=t,this.authToken},a.prototype.login=function(){function i(t){c&&c.close(),e.setAuthToken(t.data),s.resolve(t.data)}var s=n.defer(),e=this,r=400,a=500,u=screen.width/2-r/2,p=screen.height/2-a/2,l={client_id:this.clientId,redirect_uri:this.redirectUri,scope:this.scope||"",response_type:"token"},c=t.open("https://accounts.spotify.com/authorize?"+this.toQueryString(l),"Spotify","menubar=no,location=no,resizable=no,scrollbars=no,status=no,width="+r+",height="+a+",top="+p+",left="+u);return o.addEventListener("message",i,!1),s.promise},new a}]})}(window,angular);var app=angular.module("top5app",["ui.sortable","firebase","spotify"]);app.controller("AppControl",["$scope","$firebase","Spotify",function(t,i,s){var e=new Firebase("https://top52014test.firebaseIO.com/"),n=i(e.child("years").child("2014"));t.albumList=n.$asArray(),t.submissions=[],t.addAlbum=function(){t.submissions.length<10&&contains(t.submissions,t.albumname)<0&&t.submissions.push({bandname:t.bandname,albumname:t.albumname}),t.bandname="",t.albumname=""},t.deleteItem=function(i){t.submissions.splice(i,1)},t.submitAlbums=function(){for(var i in t.submissions){var e=t.submissions[i],n=10-i,r=contains(t.albumList,e.albumname);0>r?t.albumList.$add({albumname:e.albumname,bandname:e.bandname,score:n,votes:[{user:t.userName,points:n}]}).then(function(i){var e=i.key(),n=t.albumList.$indexFor(e);s.search(t.albumList[n].albumname,"album",{limit:1}).then(function(i){t.albumList[n].spotifyID=i.albums.items[0].id,t.albumList[n].spotifyImage=i.albums.items[0].images[1].url,t.albumList.$save(t.albumList[n])})}):(t.albumList[r].score+=n,t.albumList[r].votes.push({user:t.userName,points:n}),t.albumList.$save(t.albumList[r]))}t.submissions=[]},t.testSpotify=function(){s.search("Nirvana","artist").then(function(t){console.log(t)})}}]);